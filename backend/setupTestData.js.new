import mongoose from 'mongoose';
import dotenv from 'dotenv';
import Income from './models/Income.js';
import Expense from './models/Expense.js';
import ProductConfig from './models/ProductConfig.js';

dotenv.config();

const sampleData = {
  productConfigs: [
    {
      productType: "jackfruit",
      variants: [
        { name: "raw", unitPrice: 800, unit: "kg" },
        { name: "chips", unitPrice: 400, unit: "packet" },
        { name: "noodles", unitPrice: 300, unit: "packet" },
        { name: "cordial", unitPrice: 500, unit: "bottle" },
        { name: "dried", unitPrice: 1200, unit: "kg" },
        { name: "paste", unitPrice: 600, unit: "kg" }
      ]
    },
    {
      productType: "woodapple",
      variants: [
        { name: "raw", unitPrice: 600, unit: "kg" },
        { name: "jam", unitPrice: 450, unit: "bottle" },
        { name: "juice", unitPrice: 350, unit: "bottle" },
        { name: "cordial", unitPrice: 500, unit: "bottle" }
      ]
    },
    {
      productType: "durian",
      variants: [
        { name: "raw", unitPrice: 1200, unit: "piece" },
        { name: "syrup", unitPrice: 600, unit: "bottle" },
        { name: "juice", unitPrice: 500, unit: "bottle" },
        { name: "paste", unitPrice: 1500, unit: "kg" }
      ]
    },
    {
      productType: "banana",
      variants: [
        { name: "raw", unitPrice: 300, unit: "kg" },
        { name: "chips", unitPrice: 250, unit: "packet" },
        { name: "juice", unitPrice: 200, unit: "bottle" }
      ]
    }
  ]
};

const setupTestData = async () => {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('Connected to MongoDB...');

    // Clear existing data
    await ProductConfig.deleteMany({});
    console.log('Cleared existing product configurations...');

    // Insert product configurations
    await ProductConfig.insertMany(sampleData.productConfigs);
    console.log('Inserted product configurations...');

    console.log('Test data setup completed successfully!');
  } catch (error) {
    console.error('Error setting up test data:', error);
  } finally {
    await mongoose.disconnect();
    console.log('Disconnected from MongoDB');
  }
};

setupTestData();